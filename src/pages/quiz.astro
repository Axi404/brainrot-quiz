---

---

<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <title>Brainrot Quiz</title>
    <meta name="viewport" content="width=device-width" />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
  </head>
  <body
    class="bg-gradient-to-br from-indigo-100 via-blue-100 to-purple-100 flex items-center justify-center min-h-screen"
  >
    <!-- 遮罩层（美化版） -->
    <div
      id="start-overlay"
      class="fixed inset-0 backdrop-blur-sm bg-white/80 flex items-center justify-center z-50 transition-opacity duration-300 opacity-100"
    >
      <div
        class="bg-white p-8 rounded-2xl shadow-xl max-w-sm w-full text-center space-y-4"
      >
        <h2 class="text-2xl font-bold text-gray-800" id="ready">
          🎧 准备好了吗？
        </h2>
        <p class="text-sm text-gray-500" id="startDescription">
          点击按钮开始答题并播放音频
        </p>
        <button
          id="start-btn"
          class="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg font-medium"
        >
          开始答题
        </button>
      </div>
    </div>

    <!-- 主页面内容 -->
    <div
      class="bg-white p-8 rounded-3xl shadow-xl w-full max-w-2xl text-center space-y-6"
    >
      <h2 class="text-2xl font-extrabold text-gray-800">
        谁是 <span id="question-name" class="text-indigo-600">？</span>
      </h2>

      <audio id="question-audio" class="mx-auto" controls hidden></audio>
      <button
        id="replay-btn"
        class="mt-2 mb-4 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded"
      >
        🔁 重播音频
      </button>

      <div id="options" class="grid grid-cols-2 gap-4"></div>

      <div class="flex justify-between pt-4 text-gray-500">
        <div>⏳ <span id="timer">60</span>s</div>
        <div>✅ 得分：<span id="score">0</span></div>
      </div>
    </div>

    <script>
      import { translations } from "../i18n/translations";
      import type { Language } from "../i18n/translations";

      let currentLang: Language =
        (localStorage.getItem("language") as Language) || "zh";

      const updateLanguage = (lang: Language) => {
        const t = translations[lang];
        const elements = {
          title: document.title,
          ready: document.getElementById("ready"),
          startDescription: document.getElementById("startDescription"),
          startAnswering: document.getElementById("start-btn"),
          whoIs: document.getElementById("question-name"),
          replayAudio: document.getElementById("replay-btn"),
          score: document.getElementById("score"),
        };

        if (elements.ready) elements.ready.textContent = t.ready;
        if (elements.startDescription)
          elements.startDescription.textContent = t.startDescription;
        if (elements.startAnswering)
          elements.startAnswering.textContent = t.startAnswering;
        if (elements.whoIs) elements.whoIs.textContent = t.whoIs;
        if (elements.replayAudio)
          elements.replayAudio.textContent = t.replayAudio;
      };

      updateLanguage(currentLang);

      const timerEl = document.getElementById("timer");
      const scoreEl = document.getElementById("score");
      const nameEl = document.getElementById("question-name");
      const audioEl = document.getElementById("question-audio");
      const optionsEl = document.getElementById("options");
      const replayBtn = document.getElementById("replay-btn");

      const overlay = document.getElementById("start-overlay");
      const startBtn = document.getElementById("start-btn");

      let score = 0;
      let timeLeft = parseInt(localStorage.getItem("duration") || "60");
      localStorage.setItem("score", "0");

      const res = await fetch("/question_bank.json");
      const questionBank = await res.json();

      // 工具函数：从数组中随机抽取 count 个不重复项
      function getRandomSample(arr, count) {
        const copy = [...arr];
        const result = [];
        while (result.length < count && copy.length) {
          const i = Math.floor(Math.random() * copy.length);
          result.push(copy.splice(i, 1)[0]);
        }
        return result;
      }

      function askNewQuestion(shouldPlay = false) {
        const choices = getRandomSample(questionBank, 4);
        const answerIndex = Math.floor(Math.random() * 4);
        const answer = choices[answerIndex];

        nameEl.textContent = answer.name;
        audioEl.src = answer.audio;

        if (shouldPlay) {
          audioEl.play().catch(() => {});
        }

        optionsEl.innerHTML = "";
        choices.forEach((opt, i) => {
          const img = document.createElement("img");
          img.src = opt.image;
          img.alt = opt.name;
          img.className =
            "rounded-xl border-4 border-transparent hover:border-blue-500 cursor-pointer transition-all";
          img.onclick = () => {
            if (i === answerIndex) score++;
            else score--;
            scoreEl.textContent = score;
            localStorage.setItem("score", score.toString());
            askNewQuestion(true);
          };
          optionsEl.appendChild(img);
        });
      }

      function startTimer() {
        const interval = setInterval(() => {
          timeLeft--;
          timerEl.textContent = timeLeft;
          if (timeLeft <= 0) {
            clearInterval(interval);
            window.location.href = "/result";
          }
        }, 1000);
      }

      startBtn.onclick = () => {
        overlay.classList.add("opacity-0", "pointer-events-none");
        setTimeout(() => overlay.remove(), 300);

        score = 0;
        scoreEl.textContent = score;
        startTimer();
        askNewQuestion(true); // 首题自动播放
      };

      replayBtn.onclick = () => {
        audioEl.currentTime = 0;
        audioEl.play();
      };
    </script>
  </body>
</html>
