---
---
<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <title>Brainrot Quiz</title>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
  </head>
  <body class="bg-gradient-to-br from-green-100 via-emerald-100 to-lime-100 flex items-center justify-center min-h-screen">
    <div class="bg-white p-8 rounded-3xl shadow-xl max-w-md w-full text-center space-y-6">
      <div class="flex justify-end">
        <button id="langSwitch" class="text-sm text-gray-600 hover:text-gray-800 transition-colors">
          English
        </button>
      </div>
      
      <h1 id="quizEnd" class="text-3xl font-extrabold text-gray-800">🎉 答题结束</h1>

      <p class="text-sm text-gray-500">
        <span id="playerLabel">选手</span>：
        <span id="nickname" class="text-green-700 font-semibold">加载中...</span>
      </p>

      <div class="bg-green-100 p-6 rounded-xl text-center shadow-sm">
        <p id="scoreLabel" class="text-lg text-gray-600">你的得分</p>
        <p id="score" class="text-5xl font-bold text-green-600 animate-bounce">0</p>
        <p id="timeTrackLabel" class="text-lg text-gray-600 mt-4">选择的时间赛道</p>
        <p id="timeTrack" class="text-2xl font-bold text-green-600">加载中...</p>
      </div>
      <div class="flex justify-center">
        <button id="restartBtn" class="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 transition-colors">
            重新开始
        </button>
      </div>
    </div>

    <script>
      import { translations } from '../i18n/translations';
      import type { Language } from '../i18n/translations';
      
      let currentLang: Language = (localStorage.getItem('language') as Language) || 'zh';
      
      const updateLanguage = (lang: Language) => {
        const t = translations[lang];
        const elements = {
          title: document.title,
          quizEnd: document.getElementById('quizEnd'),
          playerLabel: document.getElementById('playerLabel'),
          scoreLabel: document.getElementById('scoreLabel'),
          timeTrackLabel: document.getElementById('timeTrackLabel'),
          restartBtn: document.getElementById('restartBtn'),
          langSwitch: document.getElementById('langSwitch')
        };

        if (elements.title) elements.title = t.title;
        if (elements.quizEnd) elements.quizEnd.textContent = t.quizEnd;
        if (elements.playerLabel) elements.playerLabel.textContent = t.player;
        if (elements.scoreLabel) elements.scoreLabel.textContent = t.yourScore;
        if (elements.timeTrackLabel) elements.timeTrackLabel.textContent = t.timeTrack;
        if (elements.restartBtn) elements.restartBtn.textContent = t.restart;
        if (elements.langSwitch) elements.langSwitch.textContent = lang === 'zh' ? 'English' : '中文';
      };

      const nickname = localStorage.getItem("nickname") || "匿名";
      const score = parseInt(localStorage.getItem("score") || "0");
      const remainingTime = parseInt(localStorage.getItem("remainingTime") || "0");
      const timeTrack = localStorage.getItem("timeTrack") || "未知";
      
      const nicknameElement = document.getElementById("nickname");
      const scoreElement = document.getElementById("score");
      const remainingTimeElement = document.getElementById("remainingTime");
      const timeTrackElement = document.getElementById("timeTrack");
      
      if (nicknameElement) nicknameElement.textContent = nickname;
      if (scoreElement) scoreElement.textContent = score.toString();
      if (remainingTimeElement) remainingTimeElement.textContent = remainingTime.toString();
      if (timeTrackElement) timeTrackElement.textContent = timeTrack;

      // Initialize language
      updateLanguage(currentLang);

      // Language switch handler
      const langSwitch = document.getElementById('langSwitch');
      if (langSwitch) {
        langSwitch.addEventListener('click', () => {
          currentLang = currentLang === 'zh' ? 'en' : 'zh';
          localStorage.setItem('language', currentLang);
          updateLanguage(currentLang);
        });
      }

      // Restart button handler
      const restartBtn = document.getElementById('restartBtn');
      if (restartBtn) {
        restartBtn.addEventListener('click', () => {
          window.location.href = '/';
        });
      }
    </script>
  </body>
</html>
